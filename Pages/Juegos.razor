@page "/Juego"
@using Models
@using Services

@inject IProductoServices ProductoService
@inject IConsolaServices ConsolaService
@inject ICategoriaServices CategoriaService 
@inject IJSRuntime JSRuntime


<PageTitle>Consolas</PageTitle>
<MudContainer Height="100%" Width="100%" Style="box-shadow: 8px 9px 10px rgba(9, 8, 10, 8.5);">
    <style>
        .Carta {
            width: 100%;
            height: 100%;
            box-shadow: 5px 6px 7px rgb(0, 0, 205);
        }

        .Carta {
            width: 100%;
            height: 100%;
            transition: transform 0.3s;
        }

            .Carta:hover {
                transform: translate(10px, 10px);
            }


    </style>
    <div style="display: flex; align-items: center; padding:10px  ">
        <MudLink Href="/">Home</MudLink>
        <MudText style="margin-left: 10px;">/  Productos</MudText>
    </div>

    @if (productos == null)
    {
        <MudSkeleton />
        <MudSkeleton SkeletonType="SkeletonType.Circle" Width="50px" Height="50px" />
        <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="200px" Height="110px" />
    }
    else
    {
       
    
        <MudGrid >
            @foreach (var item in productos)
            {
                
                <MudItem xs="12" sm="10" md="6" lg="4">
                    <MudCard class="Carta">
                        <MudCardHeader Class="blue darken-4">

                            <CardHeaderContent>
                                <MudText Style="color:white" Typo="Typo.h6" >@item.Nombre</MudText>

                                <MudText Style="color:white" Typo="Typo.body2">
                                    @foreach (var categoria in categorias)
                                    {
                                        @if (categoria.Id == item.IdCategoria)
                                        {
                                            @categoria.Nombre
                                        }
                                    }
                                </MudText>
                            </CardHeaderContent>

                        </MudCardHeader>
                        <MudCardMedia Image="@item.Imagen" Height="250" />
                        <MudText Typo="Typo.body2" style=" margin:5px; text-transform:uppercase; font-weight:bold">
                            @foreach (var consola in consolas)
                            {
                                @if (consola.Id == item.IdConsola)
                                {
                                    @consola.Nombre
                                }
                            }
                        </MudText>
                        <MudText Typo="Typo.body2" style=" margin:5px;">@item.Descripcion</MudText>
                        <MudCardActions>
                            <MudIconButton Icon="@Icons.Material.Filled.Favorite" Color="@GetFavoriteColor(item)" OnClick="() => ToggleFavorite(item)" />
                            <MudIconButton Icon="@Icons.Material.Filled.Share" Color="Color.Default" OnClick="() => Compartir(item)" />
                            <MudButton Link="@($"/Juego/{item.Id}")" Variant="Variant.Outlined" Color="Color.Success">Detalles</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    }
</MudContainer>
@code {

    IEnumerable<Producto> productos = new List<Producto>();
    IEnumerable<Categoria> categorias = new List<Categoria>();
    IEnumerable<Consola> consolas = new List<Consola>();

    protected override async Task OnInitializedAsync()
    {
        productos = await ProductoService.GetAll();
        consolas = await ConsolaService.GetAll();
        categorias = await CategoriaService.GetAll();
    }

    //funcionalidad  de favoritos
    private Color GetFavoriteColor(Producto producto)
    {
        return producto.EsFavorito ? Color.Error : Color.Default;
    }

    private void ToggleFavorite(Producto producto)
    {
        producto.EsFavorito = !producto.EsFavorito;
    }

    //funcion de compartir 
    private string GenerarUrlDetalle(Producto producto)
    {
        string urlDetalle = $"/Juego/{producto.Id}";
        return urlDetalle;
    }

    private async void Compartir(Producto producto)
    {
        string urlDetalle = GenerarUrlDetalle(producto);

        await JSRuntime.InvokeVoidAsync("navigator.share", new
        {
            title = "Compartir Producto",
            text = producto.Nombre,
            url = urlDetalle
        });
    }
}