﻿
@page "/Juego/{id:int}"
@using Models
@using Services
@inject IProductoServices ProductoService
@inject IConsolaServices ConsolaService
@inject ICategoriaServices CategoriaService


<MudText Typo="Typo.h5" Class="text-center mb-4">Detalles del Juego</MudText>

@if (producto == null)
{
    <p class="text-center"><em>Cargando...</em></p>
}
else
{
    <MudCard>
        <div style="display: flex; margin: 5px;">
            <div style="flex: 1;">
                <MudCardContent>
                    <MudText Typo="Typo.h6" Class="mb-4 text-center">@producto.Nombre</MudText>
                    <MudText Typo="Typo.body2">Precio: $@producto.Precio</MudText>
                    <MudText Typo="Typo.body2">Consola: @consola.Nombre</MudText>
                    <MudText Typo="Typo.body2">Consola: @categoria.Nombre</MudText>
                    <MudText Typo="Typo.body2">Descripción: @producto.Descripcion</MudText>
                </MudCardContent>
            </div>
            <div style="flex: 1;">
                <MudCardActions Class="center">
                    <img src="@producto.Imagen" alt="@producto.Nombre" Elevation="25" Class="rounded-lg" width="100%" height="100%" />
                </MudCardActions>
            </div>
        </div>
    </MudCard>
}




@code {
    [Parameter]
    public int id { get; set; }

    Producto producto = new Producto();
    
    Consola consola = new Consola();
    Categoria categoria = new Categoria();


    protected override async Task OnInitializedAsync()
    {
        if (id > 0)
            producto = await ProductoService.GetById(id);
             if (id > 0)
            consola = await ConsolaService.GetById(id);
        if (id > 0)
            categoria = await CategoriaService.GetById(id);

    }
}
