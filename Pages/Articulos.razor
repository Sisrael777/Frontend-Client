@page "/Articulo"
@using Models
@using Services
@inject IArticuloServices ArticuloService
@inject IConsolaServices ConsolaService
@inject IJSRuntime JSRuntime


<PageTitle>Articulos</PageTitle>
<style>
    .Carta {
        width: 100%;
        height: 100%;
        box-shadow: 5px 6px 7px rgb(0, 0, 205);
    }

    .Carta {
        width: 100%;
        height: 100%;
        transition: transform 0.3s;
    }

        .Carta:hover {
            transform: translate(10px, 10px);
        }

</style>
<MudContainer Height="100%" Width="100%" Style="box-shadow: 8px 9px 10px rgba(9, 8, 10, 8.5);">
    
    <div style="display: flex; align-items: center; padding:10px">
        <MudLink  Href="/">Home</MudLink>
        <MudText style="margin-left: 10px;">/  Articulos</MudText>
    </div>

    @if (articulos == null)
    {
        <MudSkeleton />
        <MudSkeleton SkeletonType="SkeletonType.Circle" Width="50px" Height="50px" />
        <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="200px" Height="110px" />
    }
    else
    {
        <MudGrid>
            @foreach (var item in articulos)
            {

                <MudItem xs="12" sm="10" md="6" lg="4">
                    <MudCard Class="Carta">
                        <MudCardHeader Class="blue darken-4">

                            <CardHeaderContent>
                                <MudText Style="color:white" Typo="Typo.h6">@item.Nombre</MudText>
                            </CardHeaderContent>

                        </MudCardHeader>
                        <MudCardMedia Image="@item.Imagen" Height="250"  />
                        <MudText Typo="Typo.body2" style=" margin:5px; text-transform:uppercase; font-weight:bold">
                            @foreach (var consola in consolas)
                            {
                                @if (consola.Id == item.IdConsola)
                                {
                                    @consola.Nombre
                                }
                            }
                        </MudText>
                        <MudText Typo="Typo.body2" style=" margin:5px;">@item.Descripcion</MudText>
                        <MudCardActions>
                            <MudIconButton Icon="@Icons.Material.Filled.Favorite" Color="@GetFavoriteColor(item)" OnClick="() => ToggleFavorite(item)" />
                            <MudIconButton Icon="@Icons.Material.Filled.Share" Color="Color.Default" OnClick="() => Compartir(item)" />
                            <MudButton Link="@($"/Articulo/{item.Id}")" Variant="Variant.Outlined" Color="Color.Success">Detalles</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    }
</MudContainer>
@code {

    IEnumerable<Articulo> articulos = new List<Articulo>();
    IEnumerable<Consola> consolas = new List<Consola>();

    protected override async Task OnInitializedAsync()
    {
        consolas = await ConsolaService.GetAll();
        articulos = await ArticuloService.GetAll();
    }
    private Color GetFavoriteColor(Articulo articulo)
    {
        return articulo.EsFavorito ? Color.Error : Color.Default;
    }

    private void ToggleFavorite(Articulo articulo)
    {
        articulo.EsFavorito = !articulo.EsFavorito;
    }

    //funcion de compartir
    private string GenerarUrlDetalle(Articulo articulo)
    {
        string urlDetalle = $"/Articulo/{articulo.Id}";
        return urlDetalle;
    }

    private async void Compartir(Articulo articulo)
    {
        string urlDetalle = GenerarUrlDetalle(articulo);

        await JSRuntime.InvokeVoidAsync("navigator.share", new
        {
            title = "Compartir Articulo",
            text = articulo.Nombre,
            url = urlDetalle
        });
    }
}
